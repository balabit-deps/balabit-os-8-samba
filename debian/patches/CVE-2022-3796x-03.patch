Backport of:

From 86834042a187e7ef0c805b4a2fbe4d63b6437794 Mon Sep 17 00:00:00 2001
From: Joseph Sutton <josephsutton@catalyst.net.nz>
Date: Fri, 24 Dec 2021 16:59:12 +1300
Subject: [PATCH] CVE-2022-37966 s4:kdc: Set supported enctypes in KDC entry

This allows us to return the supported enctypes to the client as
PA-SUPPORTED-ENCTYPES padata.

NOTE: THIS COMMIT WON'T COMPILE/WORK ON ITS OWN!

Signed-off-by: Joseph Sutton <josephsutton@catalyst.net.nz>
Reviewed-by: Stefan Metzmacher <metze@samba.org>
(cherry picked from commit cb382f7cddebabde3dac2b4bdb50d5b864463abf)

BUG: https://bugzilla.samba.org/show_bug.cgi?id=15237
[jsutton@samba.org Adapted to Samba 4.15; removed FAST-supported bit for
 KDC]
Reviewed-by: Stefan Metzmacher <metze@samba.org>
---
 source4/kdc/db-glue.c   | 30 ++++++++++++++++++++++++++----
 source4/kdc/samba_kdc.h |  1 +
 2 files changed, 27 insertions(+), 4 deletions(-)

--- a/source4/kdc/db-glue.c
+++ b/source4/kdc/db-glue.c
@@ -319,7 +319,8 @@ static krb5_error_code samba_kdc_message
 						    bool is_rodc,
 						    uint32_t userAccountControl,
 						    enum samba_kdc_ent_type ent_type,
-						    struct sdb_entry_ex *entry_ex)
+						    struct sdb_entry_ex *entry_ex,
+						    uint32_t *supported_enctypes_out)
 {
 	krb5_error_code ret = 0;
 	enum ndr_err_code ndr_err;
@@ -339,6 +340,7 @@ static krb5_error_code samba_kdc_message
 		= ldb_msg_find_attr_as_uint(msg,
 					    "msDS-SupportedEncryptionTypes",
 					    0);
+	*supported_enctypes_out = 0;
 
 	if (rid == DOMAIN_RID_KRBTGT || is_rodc) {
 		/* KDCs (and KDCs on RODCs) use AES */
@@ -448,6 +450,8 @@ static krb5_error_code samba_kdc_message
 			entry_ex->entry.keys.len++;
 		}
 
+		*supported_enctypes_out = supported_enctypes;
+
 		ret = 0;
 		goto out;
 	}
@@ -589,15 +593,19 @@ static krb5_error_code samba_kdc_message
 
 		entry_ex->entry.keys.val[entry_ex->entry.keys.len] = key;
 		entry_ex->entry.keys.len++;
+
+		*supported_enctypes_out |= ENC_RC4_HMAC_MD5;
 	}
 
 	if (pkb4) {
 		for (i=0; i < pkb4->num_keys; i++) {
 			struct sdb_key key = {};
+			uint32_t enctype_bit;
 
 			if (!pkb4->keys[i].value) continue;
 
-			if (!(kerberos_enctype_to_bitmap(pkb4->keys[i].keytype) & supported_enctypes)) {
+			enctype_bit = kerberos_enctype_to_bitmap(pkb4->keys[i].keytype);
+			if (!(enctype_bit & supported_enctypes)) {
 				continue;
 			}
 
@@ -648,14 +656,18 @@ static krb5_error_code samba_kdc_message
 
 			entry_ex->entry.keys.val[entry_ex->entry.keys.len] = key;
 			entry_ex->entry.keys.len++;
+
+			*supported_enctypes_out |= enctype_bit;
 		}
 	} else if (pkb3) {
 		for (i=0; i < pkb3->num_keys; i++) {
 			struct sdb_key key = {};
+			uint32_t enctype_bit;
 
 			if (!pkb3->keys[i].value) continue;
 
-			if (!(kerberos_enctype_to_bitmap(pkb3->keys[i].keytype) & supported_enctypes)) {
+			enctype_bit = kerberos_enctype_to_bitmap(pkb3->keys[i].keytype);
+			if (!(enctype_bit & supported_enctypes)) {
 				continue;
 			}
 
@@ -704,9 +716,16 @@ static krb5_error_code samba_kdc_message
 
 			entry_ex->entry.keys.val[entry_ex->entry.keys.len] = key;
 			entry_ex->entry.keys.len++;
+
+			*supported_enctypes_out |= enctype_bit;
 		}
 	}
 
+	/* Set FAST support bits */
+	*supported_enctypes_out |= supported_enctypes & (ENC_FAST_SUPPORTED |
+							 ENC_COMPOUND_IDENTITY_SUPPORTED |
+							 ENC_CLAIMS_SUPPORTED);
+
 out:
 	if (ret != 0) {
 		entry_ex->entry.keys.len = 0;
@@ -920,6 +939,7 @@ static krb5_error_code samba_kdc_message
 	krb5_boolean is_computer = FALSE;
 
 	struct samba_kdc_entry *p;
+	uint32_t supported_enctypes = 0;
 	NTTIME acct_expiry;
 	NTSTATUS status;
 
@@ -1222,13 +1242,14 @@ static krb5_error_code samba_kdc_message
 	/* Get keys from the db */
 	ret = samba_kdc_message2entry_keys(context, kdc_db_ctx, p, msg,
 					   rid, is_rodc, userAccountControl,
-					   ent_type, entry_ex);
+					   ent_type, entry_ex, &supported_enctypes);
 	if (ret) {
 		/* Could be bogus data in the entry, or out of memory */
 		goto out;
 	}
 
 	p->msg = talloc_steal(p, msg);
+	p->supported_enctypes = supported_enctypes;
 
 out:
 	if (ret != 0) {
@@ -1369,6 +1390,7 @@ static krb5_error_code samba_kdc_trust_m
 	p->is_trust = true;
 	p->kdc_db_ctx = kdc_db_ctx;
 	p->realm_dn = realm_dn;
+	p->supported_enctypes = supported_enctypes;
 
 	talloc_set_destructor(p, samba_kdc_entry_destructor);
 
--- a/source4/kdc/samba_kdc.h
+++ b/source4/kdc/samba_kdc.h
@@ -58,6 +58,7 @@ struct samba_kdc_entry {
 	bool is_rodc;
 	bool is_trust;
 	void *entry_ex;
+	uint32_t supported_enctypes;
 };
 
 extern struct hdb_method hdb_samba4_interface;
